# dcplaya  - developer auto documentation - Makefile
#
# (C) COPYRIGHT 2002 Ben(jamin) Gerard  <ben@sashipa.com>
#
# $Id: Makefile.in,v 1.20 2003-04-05 16:33:30 ben Exp $
#

VERSION = @VERSION@
DOXYGEN = "@DOXYGEN@"

PLG_HEADERS	 := $(shell find ../plugins -maxdepth 3 -type f -name '*.h')
PLG_HEADERS_PATH := $(sort . $(dir $(PLG_HEADERS)))

PLUG_TOP = ../plugins
PLUG_DIR = exe img inp vis

ALL_HEADERS_PATH :=\
 . \
 ../include \
 ../libs/draw \
 ../libs/translator \
 ../libs/translator/SHAsys \
 ../libs/translator/SHAtk \
 ../libs/translator/SHAR \
 ../libs/translator/SHAwrapper \
 ../libs/translator/SHAtranslator \
 ../libs/translator/SHAblitter \
 $(PLG_HEADERS_PATH)

# Local doc files
HINFILES    := $(wildcard *.hin)
DEVDOCFILES := $(HINFILES:%.hin=%.h)

HTML_EXTRA	:= dcplaya_doc.css dcplaya_header.html dcplaya_footer.html 

DOC_DIR 	:= doc
LUADOCDIR	:= lua_doc
LUASRCDIR	:= ..

LUAALLFILES  :=\
 $(wildcard $(LUASRCDIR)/*.lua)\
 $(wildcard $(LUASRCDIR)/lua/*.lua)
LUASRCFILES:=$(LUAALLFILES:$(LUASRCDIR)/%=%)
LUADOCFILES:=$(addprefix $(LUADOCDIR)/,$(LUASRCFILES:%.lua=%.lua)\
 userconf.lua\
 dcplayarc.lua\
 autorun.lua\
)

DOCINPUTS=$(ALL_HEADERS_PATH) $(LUADOCDIR) $(LUADOCDIR)/lua

SHASUBST=../utils/shasubst.sh

# Shell version
#LUA2DOX=cat $< | ../utils/lua2dox.sh
# Sed version
#LUA2DOX=sed --silent -f ../utils/lua2dox.sed $<
# Awk version
LUA2DOX=awk -f ../utils/lua2dox.awk $<
#TXT2ZML=sed --silent -f ../utils/txt2zml.sed
TXT2ZML=lua -f ../utils/txt2zml.lua

DOXYGENERIC=../utils/doxygeneric.sh

vpath
vpath %.h $(ALL_HEADERS_PATH)
vpath %.lua .. ../lua

# Build shasubst definition
#
DATE	:= $(shell date +"%B %Y")

# style sheet configuration
###################################################
CSS	:=
CSS	+= -D "background=\#c4bdac"
CSS	+= -D "text=\#59564e"

CSS	+= -D "font-family=arial, tahoma, verdana, sans-serif"
CSS	+= -D "font-size=12pt"
CSS	+= -D "font-weight=normal"

CSS	+= -D "anchor-color=\#000000"
CSS	+= -D "hi-color=\#FFFFFF"

CSS	+= -D "barcolor=\#a0937b"
CSS	+= -D "barcolorlight=\#b7a88d"
CSS	+= -D "bartext=\#000000"
CSS	+= -D "barborder=1px solid"
CSS	+= -D "barbordercolor=\#000000"

CSS	+= -D "code-text=\#59564e"
CSS	+= -D "keyword=\#04708e"
CSS	+= -D "keywordtype=\#035066"
CSS	+= -D "keywordflow=\#704000"
CSS	+= -D "comment=\#A05020"
CSS	+= -D "preprocessor=\#404080"
CSS	+= -D "stringliteral=\#307030"
CSS	+= -D "charliteral=\#307030"

## project configuration.
#
PROJECT	:= -D DATE="$(DATE)"
PROJECT	+= -D PROJECT_NUMBER="$(VERSION)"
PROJECT	+= -D PROJECT_NAME="dcplaya"

## doxygene global configuration
#
DOXALL	:= $(PROJECT)
DOXALL	+= -D QUIET=YES
DOXALL	+= -D WARNINGS=YES
DOXALL	+= -D WARN_IF_UNDOCUMENTED=NO

DOXALL	+= -D OUTPUT_DIRECTORY='$(DOC_DIR)'
DOXALL	+= -D FILE_PATTERNS='*.h *.lua'

DOXALL	+= -D EXTRACT_ALL=NO
DOXALL	+= -D PRIVATE=NO
DOXALL	+= -D SOURCE_BROWSER=NO
DOXALL  += -D JAVADOC_AUTOBRIEF=YES
DOXALL  += -D DISTRIBUTE_GROUP_DOC=YES
DOXALL  += -D OPTIMIZE_OUTPUT_FOR_C=YES
DOXALL	+= -D TAB_SIZE=8

DOXALL	+= -D PREPROCESSING=YES
DOXALL	+= -D MACRO_EXPANSION=YES
DOXALL	+= -D SORT_MEMBER_DOCS=NO
DOXALL	+= -D RECURSIVE=NO
DOXALL	+= -D ALPHABETICAL_INDEX=NO
DOXALL	+= -D INTERNAL_DOCS=NO
DOXALL	+= -D DETAILS_AT_TOP=YES
DOXALL	+= -D DISABLE_INDEX=NO

## ZML generation
#

DOXZML	+= -D REPEAT_BRIEF=NO
DOXZML	+= -D GENERATE_TODOLIST=NO
DOXZML	+= -D GENERATE_TESTLIST=NO
DOXZML	+= -D GENERATE_BUGLIST=NO
DOXZML	+= -D GENERATE_DEPRECATEDLIST=NO
DOXZML	+= -D VERBATIM_HEADERS=NO
DOXZML	+= -D SHOW_INCLUDE_FILES=NO
DOXZML	+= -D REFERENCED_BY_RELATION=NO
DOXZML	+= -D REFERENCES_RELATION=NO
DOXZML	+= -D HTML_ALIGN_MEMBERS=NO
DOXZML	+= -D CLASS_DIAGRAMS=NO
DOXZML	+= -D CLASS_GRAPH=NO
DOXZML	+= -D COLLABORATION_GRAPH=NO
DOXZML	+= -D TEMPLATE_RELATIONS=NO
DOXZML	+= -D INCLUDE_GRAPH=NO
DOXZML	+= -D INCLUDED_BY_GRAPH=NO
DOXZML	+= -D GRAPHICAL_HIERARCHY=NO
DOXZML	+= -D HTML_OUTPUT=html4zml

## DEVELOPER documentation
#
DOXDEV	:=
DOXDEV	+= -D INPUT='$(DOCINPUTS)'
DOXDEV	+= -D PREDEFINED="DEBUG"
DOXDEV	+= -D INCLUDE_PATH="../include ../include/dcplaya"
DOXDEV	+= -D OPTIMIZE_OUTPUT_FOR_C=YES
DOXDEV	+= -D ENABLED_SECTIONS=""
DOXDEV	+= -D GENERATE_HTML=YES
ifeq "$(strip $(MAKECMDGOALS))" "xml"
DOXDEV	+= -D GENERATE_XML=YES
else
DOXDEV	+= -D GENERATE_XML=NO
endif
DOXDEV	+= -D HTML_HEADER=dcplaya_header.html
DOXDEV	+= -D HTML_FOOTER=dcplaya_footer.html
DOXDEV	+= -D HTML_STYLESHEET=dcplaya_doc.css
DOXDEV	+= -D GENERATE_TREEVIEW=NO
DOXDEV	+= -D GENERATE_MAN=NO
DOXDEV	+= -D MAN_EXTENSION=.1
DOXDEV	+= -D GENERATE_LATEX=NO

## Make rules
#


all: Makefile devdoc
xml: all
txt: all txt_only

txt_only:
	@mkdir -p $(DOC_DIR)/text
	@for i in `find $(DOC_DIR)/html -type f -name '*.html'`; do\
	lynx -width=64 -dump $$i > $(DOC_DIR)/text/`basename $$i .html`.txt;\
	done

special: Makefile zmldoc
txt4zml: special txt4zml_only
zml: txt4zml zml_only

txt4zml_only:
	@mkdir -p $(DOC_DIR)/text4zml
	@for i in `find $(DOC_DIR)/html4zml -type f -name '*.html'`; do\
	lynx -width=4096 -dump $$i \
	> $(DOC_DIR)/text4zml/`basename $$i .html`.txt;\
	done; rm -rf "$(DOC_DIR)/html4zml"

zml_only:
	@mkdir -p $(DOC_DIR)/zml
	@for i in `find $(DOC_DIR)/text4zml -type f -name '*.txt'`; do\
	echo "[`basename "$$i"`]";\
	cat zmlheader.zml > $(DOC_DIR)/zml/`basename "$$i" .txt`.zml; \
	$(TXT2ZML) "$$i" >> $(DOC_DIR)/zml/`basename "$$i" .txt`.zml;\
	done; rm -rf "$(DOC_DIR)/text4zml"


Makefile : Makefile.in
	(cd ..; ./config.status) 

# $(LUADOCDIR)/doc.lua : luadoc.h
# 	cp -f $< $@

$(LUADOCDIR)/userconf.lua : $(LUASRCDIR)/userconf-release.lua # Makefile
	@echo "make [$@] from [$<]"
	@mkdir -p $(dir $@)
	@$(LUA2DOX) > $@

$(LUADOCDIR)/%.lua : %.lua  # Makefile
	@mkdir -p $(dir $@)
	@echo "make [$@] from [$<]"
	@$(LUA2DOX) > $@

luadoc: $(LUADOCFILES)

devdoc: devdoc.dox $(DEVDOCFILES) luadoc $(HTML_EXTRA)
	@$(DOXYGEN) $<

zmldoc: zmldoc.dox $(DEVDOCFILES) luadoc $(HTML_EXTRA)
	@$(DOXYGEN) $<

# Phony since xml could be modified by goal !
.PHONY: devdoc.dox zmldoc.dox

devdoc.dox : devdoc.doxin
	@echo "make [$@] from [$<]"
	@$(DOXYGENERIC) $@ $(DOXALL) $(DOXDEV) < $< 

zmldoc.dox : devdoc.doxin
	@echo "make [$@] from [$<]"
	@$(DOXYGENERIC) $@ $(DOXALL) $(DOXDEV) $(DOXZML) < $< 

devdoc.doxin:
	@echo "make [$@]"
	@$(DOXYGEN) -s -g $@ > /dev/null

%.html : %.htmlin Makefile
	@$(SHASUBST) $(DOXALL) < $< > $@

%.css : %.cssin Makefile
	@echo "make [$@] from [$<]"
	@$(SHASUBST) $(CSS) < $< > $@

%.h : %.hin Makefile
	@echo "make [$@] from [$<]"
	@cat $< > $@

clean_local:
	@rm -f *.dox* *.h *~ *.html *.css *.lua
	@find $(LUADOCDIR) -name '*.lua' -type f -exec rm "{}" \;

clean: clean_local
	@rm -rf $(foreach i, html xml zml man text latex text4zml html4zml,$(DOC_DIR)/$(i)) 

distclean: clean
	@rm -rf Makefile *~ $(LUADOCDIR)

dep depend depend-clean:

required:
	mkdir -p "$(LUADOCDIR)/lua" "$(DOC_DIR)"
